create table consumers (id int8 generated by default as identity, status varchar(10) default 'ACTIVE', updated TIMESTAMP WITH TIME ZONE, name varchar(200) not null, rd_dst_name varchar(200) not null, trans_name varchar(200) not null, update_user_id int8 not null, primary key (id));
create table env_changes (id int8 generated by default as identity, status varchar(10) default 'ACTIVE', updated TIMESTAMP WITH TIME ZONE, change_date TIMESTAMP WITH TIME ZONE, expiration_date TIMESTAMP WITH TIME ZONE not null, install_date TIMESTAMP WITH TIME ZONE not null, place varchar(200), update_user_id int8 not null, consumer_id int8 not null, env_unit_id int8 not null, primary key (id));
create table env_unit_opers (id int8 generated by default as identity, date_fn timestamp with time zone, date_st timestamp with time zone not null, expir_date timestamp with time zone, name varchar(30), env_unit_id int8 not null, next_id int8, prev_id int8, user_id int8 not null, primary key (id));
create table env_unit_types (id int8 generated by default as identity, category varchar(30), descr varchar(200), name varchar(100) not null, primary key (id));
create table env_units (id int8 generated by default as identity, number varchar(50), passport varchar(50), verifying_date TIMESTAMP WITH TIME ZONE, consumer_id int8, env_unit_type_id int8 not null, equip_id int8, primary key (id));
create table equip_opers (id int8 generated by default as identity, name varchar(20) not null, equip_id int8 not null, primary key (id));
create table equip_servs (id int8 generated by default as identity, date_fn timestamp with time zone, date_st timestamp with time zone not null, next_date timestamp with time zone, equip_oper_id int8 not null, user_id int8 not null, primary key (id));
create table equips (id int8 generated by default as identity, name varchar(100) not null, number varchar(50), status varchar(10) default 'ACTIVE', year varchar(4), consumer_id int8 not null, primary key (id));
create table menu_items (id int8 generated by default as identity, icon_name varchar(50), level int2 not null, name varchar(50) not null, ord int4, path varchar(200), parent_id int8, permission_id int4, primary key (id));
create table param_types (id int8 generated by default as identity, status varchar(10) default 'ACTIVE', updated TIMESTAMP WITH TIME ZONE, descr varchar(200), name varchar(100) not null, update_user_id int8 not null, primary key (id));
create table permissions (id int4 generated by default as identity, code varchar(200) not null, name varchar(1000) not null, primary key (id));
create table rd_job_confs (id int8 generated by default as identity, status varchar(10) default 'ACTIVE', updated TIMESTAMP WITH TIME ZONE, batch_cnt int2 not null, changed boolean, descr varchar(200), interval int2 not null, state varchar(30), type varchar(30) not null, update_user_id int8 not null, consumer_id int8 not null, primary key (id));
create table rd_params (id int8 generated by default as identity, status varchar(10) default 'ACTIVE', updated TIMESTAMP WITH TIME ZONE, name varchar(100) not null, path_src varchar(250) not null, trans_name varchar(100) not null, update_user_id int8 not null, param_type_id int8 not null, rd_job_conf_id int8 not null, primary key (id));
create table role_permissions (role_id int8 not null, permission_id int4 not null);
create table roles (id int8 generated by default as identity, created TIMESTAMP WITH TIME ZONE not null, name varchar(255), status varchar(10) default 'ACTIVE', updated TIMESTAMP WITH TIME ZONE, primary key (id));
create table safe_events (id int8 generated by default as identity, name varchar(10) not null, st_date timestamp with time zone not null, fn_date timestamp with time zone,  rd_param_id int8 not null, primary key (id));
create table user_posts (id int8 generated by default as identity, name varchar(100) not null, primary key (id));
create table user_roles (user_id int8 not null, role_id int8 not null);
create table users (id int8 generated by default as identity, email varchar(100), name varchar(30), password varchar(200), patronymic varchar(30), phone_number varchar(20), status varchar(10) default 'ACTIVE', surname varchar(30), updated TIMESTAMP WITH TIME ZONE, username varchar(50) not null, consumer_id int8, user_post_id int8, user_id int8, primary key (id));
alter table if exists consumers add constraint fk_user foreign key (update_user_id) references users;
alter table if exists env_changes add constraint fk_user foreign key (update_user_id) references users;
alter table if exists env_changes add constraint fk_consumer foreign key (consumer_id) references consumers;
alter table if exists env_changes add constraint fk_env_unit foreign key (env_unit_id) references env_units;
alter table if exists env_unit_opers add constraint fk_envunit foreign key (env_unit_id) references env_units;
alter table if exists env_unit_opers add constraint FKdrxfq5dsrakhot1hlihel888l foreign key (next_id) references env_unit_opers;
alter table if exists env_unit_opers add constraint FKtl8g1euafbqosytl5xov00gai foreign key (prev_id) references env_unit_opers;
alter table if exists env_unit_opers add constraint fk_user foreign key (user_id) references users;
alter table if exists env_units add constraint fk_consumer foreign key (consumer_id) references consumers;
alter table if exists env_units add constraint fk_envunittype foreign key (env_unit_type_id) references env_unit_types;
alter table if exists env_units add constraint fk_equip foreign key (equip_id) references equips;
alter table if exists equip_opers add constraint fk_equip foreign key (equip_id) references equips;
alter table if exists equip_servs add constraint fk_equipoper foreign key (equip_oper_id) references equip_opers;
alter table if exists equip_servs add constraint fk_user foreign key (user_id) references users;
alter table if exists equips add constraint fk_consumer foreign key (consumer_id) references consumers;
alter table if exists menu_items add constraint fk_menu_item foreign key (parent_id) references menu_items;
alter table if exists menu_items add constraint fk_permission foreign key (permission_id) references permissions;
alter table if exists param_types add constraint fk_user foreign key (update_user_id) references users;
alter table if exists rd_job_confs add constraint fk_user foreign key (update_user_id) references users;
alter table if exists rd_job_confs add constraint fk_consumer foreign key (consumer_id) references consumers;
alter table if exists rd_params add constraint fk_user foreign key (update_user_id) references users;
alter table if exists rd_params add constraint fk_param_type foreign key (param_type_id) references param_types;
alter table if exists rd_params add constraint fk_rd_job_conf foreign key (rd_job_conf_id) references rd_job_confs;
alter table if exists role_permissions add constraint FKegdk29eiy7mdtefy5c7eirr6e foreign key (permission_id) references permissions;
alter table if exists role_permissions add constraint FKn5fotdgk8d1xvo8nav9uv3muc foreign key (role_id) references roles;
alter table if exists safe_events add constraint fk_rd_param foreign key (rd_param_id) references rd_params;
alter table if exists safe_events add constraint fk_user foreign key (repair_user_id) references users;
alter table if exists user_roles add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 foreign key (role_id) references roles;
alter table if exists user_roles add constraint FKhfh9dx7w3ubf1co1vdev94g3f foreign key (user_id) references users;
alter table if exists users add constraint fk_consumer foreign key (consumer_id) references consumers on delete cascade;
alter table if exists users add constraint fk_user_post foreign key (user_post_id) references user_posts;
